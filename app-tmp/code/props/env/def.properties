# Locales supported by this environment
general.locales=zh_CN zh en en_US 

# For Apache, this determines where global logger output goes.
logger.file=/home/www/apache/logs/web.log
#
# The following setting determines how often to run the garbage collector.
# The setting is in MINUTES. If omitted, or 0, then gc is not run.
# Note that this setting will be used by ALL processes, including the
# web server.
#
gc.period=0
# Minimum acceptable JVM version, in dotted notation
jvm.minVersion=1.2.2
# how often we want to log server jvm stats (used by all processes, including the web server)
jvm.statsThread.period=5
# Boolean: whether or not a JIT must be used
jvm.jitRequired=true
#
# Enable keepalive for anybody using the Transactor class (ie, the service
# clients).
#
transactor.keepalive=true
#
# Enable keepalive for server sockets.
#
server.keepalive=true
# This is a template for machine-specific settings.
# Name of the local machine - absolute, not DNS round robin
# Should include the port, if we use a non-default one.
general.absoluteHostname=computer
# general.dnsHostname. On web servers that host the d2 home page,
# this property should be set to the dns, round-robin, hostname for
# the server.  That is, www.xxx.com, www.prexxx.com, etc (not
# www01.xxx.com...).
general.dnsHostname=register.thedream.cc
general.domain=.thedream.cc
pool.maxChildren=64
# Points to the default database properties file for this environment.
db.config.file.default=/props/db/def.properties
alarm.component.spring.factory.definition=/com/d2/core/client/alarm/conf/BESL-remoted.xml
objserver.component.spring.factory.definition=/com/d2/client/osrv/conf/BESL-remoted.xml
image.component.spring.factory.definition=/com/d2/client/image/conf/BESL-remoted.xml
userprops.component.spring.factory.definition=/com/d2/client/userprops/conf/BESL-remoted.xml
rate.component.spring.factory.definition=/com/d2/core/client/rate/conf/BESL-remoted.xml
userserver.component.spring.factory.definition=/com/d2/client/user/conf/BESL-remoted.xml
stats.component.spring.factory.definition=/com/d2/client/stats/conf/BESL-remoted.xml
gate.component.spring.factory.definition=/com/d2/client/gate/conf/BESL-remoted.xml
proxy.component.spring.factory.definition=/com/d2/client/proxy/conf/BESL-remoted.xml
game.component.spring.factory.definition=/com/d2/client/game/conf/BESL-remoted.xml
gamedb.component.spring.factory.definition=/com/d2/client/gamedb/conf/BESL-remoted.xml
pubdataserver.component.spring.factory.definition=/com/d2/client/pubdata/conf/BESL-remoted.xml
zhidaoserver.component.spring.factory.definition=/com/d2/client/ask/conf/BESL-remoted.xml
billingServer.component.spring.factory.definition=/com/d2/client/billing/conf/BESL-remoted.xml
payServer.component.spring.factory.definition=/com/d2/client/pay/conf/BESL-remoted.xml
mailserver.component.spring.factory.definition=/com/d2/client/mail/conf/BESL-remoted.xml

#gameserver.timeout=1200000
#billingserver.timeout=1200000
#
# Web service XML Interface settings
#
xmlinterface.dtdUrl=http://webs.thedream.cc/webs/interface.dtd
xmlinterface.version=1.0
xmlinterface.maxHourlyAccess=300000
xmlinterface.defaultSkin=d2com
xmlinterface.defaultLang=ZH
#This is a list of subsXML calls that are read-only.  Utlimately it determines if they can failover for HA.
subsXML.readOnlyList=GetAcctInfoRequest LoginRequest

cross-domain-policy = <?xml version="1.0"?><cross-domain-policy><site-control permitted-cross-domain-policies="all"/><allow-access-from domain="*" to-ports="11000" /></cross-domain-policy>





#
# The frequency of inspecting the lkey cache for expired entries (min).
#
lkey.expire.interval = 5

#
# The length of time that an lkey is kept in the cache after the last time it's used (min).
#
lkey.expire.timeout = 30

##
# This property should be set in each network specific def.properties
# to the number of lock servers that will be run on that network.
#
#lock.partitions=1
#recordlock.partitions=1

#
# The following is the amount of time to cache StatsService.incrementCount()
# calls. These are the page views. The number is in seconds. So if 60,
# every minute the cache is drained and sent to the StatsServer.
#
# Report page view stats from the WS to the stats servers every 10 mins.
stats.service.reportInterval=1

# The following is the amount of time to sleep after processing 10 packets
# sent to the stats server when the incrementCount() cache is drained. The
# reason for the throttle is to prevent spikes in the stats server load.
# The number is in msecs. So, eg, if the cache contained 1k packets, it
# would drain in 10 secs if the below is set to 100msecs (which is also
# the default if the property is missing).

stats.service.sleepInterval=100

# The PubDataService class will send packets to the server on a
# separate thread so as not to block the client. However, the thread
# could get backed up if there is a problem communicating with the
# PubData servers. Since we don't want to run out of memory, we set a
# max size on the queue. This means any outgoing packets which exceed
# the below will be tossed.
#
pubdata.service.maxQueueSize=5000